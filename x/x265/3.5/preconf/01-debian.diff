--- a/source/CMakeLists.txt	2021-03-16 20:53:00.000000000 +0800
+++ b/source/CMakeLists.txt	2023-07-12 17:30:25.937673765 +0800
@@ -50,6 +50,9 @@ if("${SYSPROC}" STREQUAL "" OR X86MATCH
     add_definitions(-DX265_ARCH_X86=1)
     if(CMAKE_CXX_FLAGS STREQUAL "-m32")
         message(STATUS "Detected x86 target processor")
+    elseif(CMAKE_LIBRARY_ARCHITECTURE STREQUAL "x86_64-linux-gnux32")
+        message(STATUS "Detected x32 target system")
+        set(X32 1)
     elseif("${CMAKE_SIZEOF_VOID_P}" MATCHES 8)
         set(X64 1)
         add_definitions(-DX86_64=1)
@@ -77,7 +80,7 @@ elseif(ARMMATCH GREATER "-1")
         add_definitions(-DX265_ARCH_ARM=1 -DX265_ARCH_ARM64=1 -DHAVE_ARMV6=0)
     else()
         message(STATUS "Detected ARM target processor")
-        add_definitions(-DX265_ARCH_ARM=1 -DX265_ARCH_ARM64=0 -DHAVE_ARMV6=1)
+        add_definitions(-DX265_ARCH_ARM=1)
     endif()
 else()
     message(STATUS "CMAKE_SYSTEM_PROCESSOR value `${CMAKE_SYSTEM_PROCESSOR}` is unknown")
@@ -126,6 +129,8 @@ endif(UNIX)
 
 if(X64 AND NOT WIN32)
     option(ENABLE_PIC "Enable Position Independent Code" ON)
+elseif(X32)
+    option(ENABLE_PIC "Enable Position Independent Code" ON)
 else()
     option(ENABLE_PIC "Enable Position Independent Code" OFF)
 endif(X64 AND NOT WIN32)
@@ -228,7 +233,7 @@ if(GCC)
         else()
             add_definitions(-march=native)
         endif()
-    elseif(X86 AND NOT X64)
+    elseif(X86 AND NOT X64 AND NOT X32)
         string(FIND "${CMAKE_CXX_FLAGS}" "-march" marchPos)
         if(marchPos LESS "0")
             add_definitions(-march=i686)
@@ -252,10 +257,7 @@ if(GCC)
         else()
             find_package(Neon)
             if(CPU_HAS_NEON)
-                set(ARM_ARGS -mcpu=native -mfloat-abi=hard -mfpu=neon -marm -fPIC)
                 add_definitions(-DHAVE_NEON)
-            else()
-                set(ARM_ARGS -mcpu=native -mfloat-abi=hard -mfpu=vfp -marm)
             endif()
         endif()
     endif()
--- a/source/encoder/api.cpp	2021-03-16 20:53:00.000000000 +0800
+++ b/source/encoder/api.cpp	2023-07-12 17:30:26.541802239 +0800
@@ -1144,19 +1144,6 @@ const x265_api* x265_api_get(int bitDept
             if (get)
                 api = get(reqDepth);
         }
-#else
-        void* h = dlopen(libname, RTLD_LAZY | RTLD_LOCAL);
-        if (!h)
-        {
-            h = dlopen(multilibname, RTLD_LAZY | RTLD_LOCAL);
-            reqDepth = bitDepth;
-        }
-        if (h)
-        {
-            api_get_func get = (api_get_func)dlsym(h, method);
-            if (get)
-                api = get(reqDepth);
-        }
 #endif
 
         g_recursion--;
@@ -1238,20 +1225,6 @@ const x265_api* x265_api_query(int bitDe
             if (query)
                 api = query(reqDepth, apiVersion, err);
         }
-#else
-        void* h = dlopen(libname, RTLD_LAZY | RTLD_LOCAL);
-        if (!h)
-        {
-            h = dlopen(multilibname, RTLD_LAZY | RTLD_LOCAL);
-            reqDepth = bitDepth;
-        }
-        if (h)
-        {
-            e = X265_API_QUERY_ERR_FUNC_NOT_FOUND;
-            api_query_func query = (api_query_func)dlsym(h, method);
-            if (query)
-                api = query(reqDepth, apiVersion, err);
-        }
 #endif
 
         g_recursion--;
