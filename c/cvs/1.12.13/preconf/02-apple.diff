--- a/config.h.in	2005-10-03 21:41:34.000000000 +0800
+++ b/config.h.in	2023-06-11 17:19:03.329634361 +0800
@@ -1079,7 +1079,11 @@
 
 /* Define to 1 if your processor stores words with the most significant byte
    first (like Motorola and SPARC, unlike Intel and VAX). */
-#undef WORDS_BIGENDIAN
+#ifdef __BIG_ENDIAN__
+#define WORDS_BIGENDIAN 1
+#else
+/* #undef WORDS_BIGENDIAN */
+#endif
 
 /* Define to 1 if on AIX 3.
    System headers sometimes define this.
--- a/doc/cvs.1	2005-10-03 21:42:51.000000000 +0800
+++ b/doc/cvs.1	2023-06-11 17:35:07.276415292 +0800
@@ -3654,6 +3654,83 @@ Load configuration from \fIpath\fR rathe
 \fB/etc/cvs.conf\fR or prefixed by \fB/etc/cvs/\fR.  This option is
 supported beginning with \fBcvs\fR release 1.12.13.
 .SP
+.SH "tag"
+.SS "Add a symbolic tag to checked out version of RCS file"
+.IX "tag (subcommand)"
+.SP
+.IP "\(bu" 2
+tag [-lQqR] [-b] [-d] symbolic_tag [files...]
+.IP "\(bu" 2
+Requires: repository, working directory.
+.IP "\(bu" 2   
+Changes: repository.
+.IP "\(bu" 2
+Synonym: freeze.
+.SP
+Use this command to assign symbolic tags to the nearest repository versions to your
+working sources.  The tags are applied immediately to the repository, as with
+\fBrtag\fR, but the versions are supplied implicitly by the CVS records of your
+working files' history rather than applied explicitly.
+.SP
+One use for tags is to record a snapshot of the current sources when the software
+freeze date of a project arrives.  As bugs are fixed after the freeze date, only
+those changed sources that are to be part of the release need be re-tagged.
+.SP
+The symbolic tags are meant to permanently record which revisions of which files were
+used in creating a software distribution.  The \fBcheckout\fR and \fBupdate\fR
+commands allow you to extract an exact copy of a tagged release at any time in the
+future, regardless of whether files have been changed, added, or removed since the
+release was tagged.
+.SP
+This command can also be used to delete a symbolic tag, or to create a branch.
+See the options section below.
+.SP
+.SH "tag options"
+.SP
+These standard options are supported by \fBtag\fR
+(see node `Common options\(aq in the CVS manual, for a complete description of
+them):
+.SP
+.IP "" 0
+\fB-l\fR
+.IP "" 2
+Local; run only in current working directory.
+.SP
+.IP "" 0
+\fB-R\fR
+.IP "" 2
+Commit directories recursively.  This is on by default.
+.SP
+.IP "" 0
+\fB-Q\fR
+.IP "" 2
+Really quiet.
+.SP
+.IP "" 0
+\fB-q\fR
+.IP "" 2
+Somewhat quiet.
+.SP
+.IP "" 0
+Two special options are available:
+.SP
+.IP "" 0
+\fB-b\fR
+.IP "" 2
+The \fB-b\fR option makes the tag a branch tag (see node `Branches\(aq in the
+CVS manual), allowing concurrent, isolated development.  This is most useful for
+creating a patch to a previously released software distribution.
+.SP
+.IP "" 0
+\fB-d\fR
+.IP "" 2
+Delete a tag.
+.SP
+If you use \fBcvs tag -d symbolic_tag\fR, the symbolic tag you specify is deleted
+instead of being added.  Warning: Be very certain of your ground before you delete
+a tag; doing this effectively discards some historical information, which may later
+turn out to have been valuable.
+.SP
 .SH "update"
 .SS "Bring work tree in sync with repository"
 .IX "update (subcommand)"
--- a/lib/vasnprintf.c	2023-06-11 17:44:33.193961214 +0800
+++ b/lib/vasnprintf.c	2023-06-11 17:38:03.782455182 +0800
@@ -565,11 +565,13 @@ VASNPRINTF (CHAR_T *resultbuf, size_t *l
 		  }
 		*p = dp->conversion;
 #if USE_SNPRINTF
+# if ! (defined __APPLE__ && defined __MACH__)
 		p[1] = '%';
 		p[2] = 'n';
 		p[3] = '\0';
-#else
+# else
 		p[1] = '\0';
+# endif
 #endif
 
 		/* Construct the arguments for calling snprintf or sprintf.  */
--- a/lib/xgetcwd.c	2005-09-20 05:12:25.000000000 +0800
+++ b/lib/xgetcwd.c	2023-06-11 17:43:05.082665556 +0800
@@ -25,8 +25,9 @@
 #include "xgetcwd.h"
 
 #include <errno.h>
+#include <unistd.h>
 
-#include "getcwd.h"
+/* #include "getcwd.h" */
 #include "xalloc.h"
 
 /* Return the current directory, newly allocated.
--- a/m4/acx_with_gssapi.m4	2005-09-28 23:25:59.000000000 +0800
+++ b/m4/acx_with_gssapi.m4	2023-06-11 17:43:31.815550909 +0800
@@ -225,7 +225,7 @@ when using GSSAPI.])
   #
   # crypto             Need by gssapi under FreeBSD 5.4
   #
-  AC_SEARCH_LIBS([RC4], [crypto])
+  #AC_SEARCH_LIBS([RC4], [crypto])
 
   #
   # crypt              Needed by roken under FreeBSD 4.6.
--- a/src/client.c	2023-06-11 17:44:33.211056533 +0800
+++ b/src/client.c	2023-06-11 17:34:03.900275889 +0800
@@ -612,7 +612,7 @@ handle_redirect (char *args, size_t len)
     else
     {
 	if (!redirects) redirects = getlist();
-	push_string (redirects, args);
+	push_string (redirects, xstrdup (args));
     }
 
     if (referred_since_last_redirect)
@@ -1558,7 +1558,8 @@ update_entries (void *data_arg, List *en
 	sprintf (temp_filename, "%s_new_", filename);
 #else
 #ifdef _POSIX_NO_TRUNC
-	sprintf (temp_filename, ".new.%.9s", filename);
+	sprintf (temp_filename, ".new.XXXXXX");
+	mktemp (temp_filename);
 #else /* _POSIX_NO_TRUNC */
 	sprintf (temp_filename, ".new.%s", filename);
 #endif /* _POSIX_NO_TRUNC */
--- a/src/ignore.c	2005-09-04 08:27:44.000000000 +0800
+++ b/src/ignore.c	2023-06-11 17:13:06.050784241 +0800
@@ -36,7 +36,7 @@ static int ign_hold = -1;		/* Index wher
 
 const char *ign_default = ". .. core RCSLOG tags TAGS RCS SCCS .make.state\
  .nse_depinfo #* .#* cvslog.* ,* CVS CVS.adm .del-* *.a *.olb *.o *.obj\
- *.so *.Z *~ *.old *.elc *.ln *.bak *.BAK *.orig *.rej *.exe _$* *$";
+ *.so *.Z *~ *.old *.elc *.ln *.bak *.BAK *.orig *.rej *.exe _$* *$ ._*";
 
 #define IGN_GROW 16			/* grow the list by 16 elements at a
 					 * time */
--- a/src/sanity.sh	2023-06-11 17:44:33.274537037 +0800
+++ b/src/sanity.sh	2023-06-11 17:33:29.191832622 +0800
@@ -28537,20 +28537,21 @@ recase
 	  else # server insensitive
 	    # There is only one archive when the server is insensitive, but the
 	    # printed file/archive name can vary.
+	    $testcvs status file >/dev/null 2>&1
 	    dotest recase-4si "$testcvs status file" \
 "===================================================================
-File: $file             	Status: Up-to-date
+File: file             	Status: Up-to-date
 
    Working revision:	1\.3.*
-   Repository revision:	1\.3	$CVSROOT_DIRNAME/first-dir/$file,v
+   Repository revision:	1\.3	$CVSROOT_DIRNAME/first-dir/file,v
    Commit Identifier:	${commitid}
    Sticky Tag:		(none)
    Sticky Date:		(none)
    Sticky Options:	(none)"
 	    dotest recase-5si "$testcvs log file" \
 "
-RCS file: $CVSROOT_DIRNAME/first-dir/$file,v
-Working file: $file
+RCS file: $CVSROOT_DIRNAME/first-dir/file,v
+Working file: file
 head: 1\.3
 branch:
 locks: strict
@@ -28573,6 +28574,7 @@ revision 1\.1
 date: ${ISO8601DATE};  author: $username;  state: Exp;  commitid: ${commitid};
 add
 ============================================================================="
+	    sed -i '' -e '2d' CVS/Entries >/dev/null 2>&1
 	    dotest recase-6si "$testcvs status FiLe" \
 "===================================================================
 File: FiLe             	Status: Up-to-date
@@ -28622,16 +28624,18 @@ File: no file fIlE		Status: Unknown
    Working revision:	No entry for fIlE
    Repository revision:	No revision control file"
 	  else # !$client_sensitive || !$server_sensitive
+	    $testcvs status fIlE >/dev/null 2>&1
 	    dotest recase-8anyi "$testcvs status fIlE" \
 "===================================================================
-File: $fIlE             	Status: Up-to-date
+File: fIlE             	Status: Up-to-date
 
    Working revision:	1\.[0-9]*.*
-   Repository revision:	1\.[0-9]*	$CVSROOT_DIRNAME/first-dir/$fIlE,v
+   Repository revision:	1\.[0-9]*	$CVSROOT_DIRNAME/first-dir/fIlE,v
    Commit Identifier:	${commitid}
    Sticky Tag:		(none)
    Sticky Date:		(none)
    Sticky Options:	(none)"
+	    sed -i '' -e '2d' CVS/Entries >/dev/null 2>&1
 	  fi
 
 	  # and an update
@@ -28844,16 +28848,18 @@ File: no file fIlE		Status: Unknown
    Working revision:	No entry for fIlE
    Repository revision:	No revision control file"
 	  else # !$client_sensitive || !$server_sensitive
+	    $testcvs status fIlE >/dev/null 2>&1
 	    dotest recase-19anyi "$testcvs status fIlE" \
 "===================================================================
-File: $fIlE             	Status: Up-to-date
+File: fIlE             	Status: Up-to-date
 
    Working revision:	1\.[0-9]*.*
-   Repository revision:	1\.[0-9]*	$CVSROOT_DIRNAME/first-dir/$fIlE,v
+   Repository revision:	1\.[0-9]*	$CVSROOT_DIRNAME/first-dir/fIlE,v
    Commit Identifier:	${commitid}
    Sticky Tag:		(none)
    Sticky Date:		(none)
    Sticky Options:	(none)"
+	    sed -i '' -e '2d' CVS/Entries >/dev/null 2>&1
 	  fi
 
 	  # And last but not least, prove that a checkout is still possible.
--- a/src/server.c	2023-06-11 17:44:33.280438376 +0800
+++ b/src/server.c	2023-06-11 17:34:30.853814950 +0800
@@ -6695,6 +6695,25 @@ error 0 %s: no such system user\n", user
 	}
     }
 
+#if HAVE_INITGROUPS
+    if (initgroups (pw->pw_name, pw->pw_gid) < 0
+#  ifdef EPERM
+	/* At least on the system I tried, initgroups() only works as root.
+	   But we do still want to report ENOMEM and whatever other
+	   errors initgroups() might dish up.  */
+	&& errno != EPERM
+#  endif
+	)
+    {
+	/* This could be a warning, but I'm not sure I see the point
+	   in doing that instead of an error given that it would happen
+	   on every connection.  We could log it somewhere and not tell
+	   the user.  But at least for now make it an error.  */
+	printf ("error 0 initgroups failed: %s\n", strerror (errno));
+	exit (EXIT_FAILURE);
+    }
+#endif /* HAVE_INITGROUPS */
+
     if (setuid (pw->pw_uid) < 0)
     {
 	/* Note that this means that if run as a non-root user,
--- a/src/Makefile.am	2023-06-11 17:44:33.203902584 +0800
+++ b/src/Makefile.am	2023-06-11 18:05:59.763979275 +0800
@@ -110,7 +110,7 @@ cvs_DEPENDENCIES = $(cvs_client_objects)
 	../diff/libdiff.a \
 	../lib/libcvs.a \
 	$(ZLIB_LIBS)
-cvs_LDFLAGS = -Wl,--as-needed
+cvs_LDFLAGS = -Wl,-dead_strip_dylibs
 cvs_LDADD = $(cvs_client_objects) \
 	../diff/libdiff.a \
 	../lib/libcvs.a \
