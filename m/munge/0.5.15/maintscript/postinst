#! /bin/sh
# postinst script for munge
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

case "$1" in
    configure)
      pw useradd _munge -c "munge" -d /var/empty -s /usr/bin/false || true

      chown _munge:_munge /var/log/munge
      chmod 0711 /var/log/munge
      chown _munge:_munge /etc/munge
      chmod 0711 /etc/munge
      chown _munge:_munge /var/lib/munge
      chmod 0711 /var/lib/munge

      if [ -e /etc/munge/munge.key ] ; then
        chown _munge:_munge /etc/munge/munge.key
        chmod 0400 /etc/munge/munge.key
      else
        # For some reason Darwin cannot use `su' to execute commands as
        # non-shell users, since they all goes /usr/bin/false.
        # There was also no `-s' option available on Darwin so we cannot
        # set a temp shell (I will add this someday)
        # The only way to achieve this goal is launchd.plist
        # su _munge -s /bin/sh -c 'mungekey -c'
        launchctl unload -F /Library/LaunchDaemons/mungekey.plist &> /dev/null || true
        launchctl load /Library/LaunchDaemons/mungekey.plist
      fi

      launchctl unload -F /Library/LaunchDaemons/munge.plist &> /dev/null || true
      launchctl load /Library/LaunchDaemons/munge.plist
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0


